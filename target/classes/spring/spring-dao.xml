<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 配置整合Mybatis过程 -->
    <!-- 1、配置数据库相关参数:properties的属性${url} -->
    <!-- <context:property-placeholder location="classpath:jdbc.properties"/> -->
    <!-- 2、数据库连接池 -->
    <!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"> -->
        <!-- 配置连接池属性 -->
        <!-- <property name="driverClass" value="${jdbc.driver}"/> -->
        <!-- <property name="jdbcUrl" value="${jdbc.url}"/> -->
        <!-- <property name="user" value="${jdbc.username}"/> -->
        <!-- <property name="password" value="${jdbc.password}"/> -->
        <!-- C3P0连接池的私有属性 -->
        <!-- <property name="maxPoolS ize" value="30"/> -->
        <!-- <property name="minPoolSize" value="10"/> -->
        <!-- 关闭连接后不自动commit -->
        <!-- <property name="autoCommitOnClose" value="false"/> -->
        <!-- 获取连接超时时间 -->
        <!-- <property name="checkoutTimeout" value="1000"/> -->
        <!-- 当获取连接失败重试次数 -->
        <!-- <property name="acquireRetryAttempts" value="4"/> -->
    <!-- </bean> -->
    <!-- 使用下面的方法配置数据库相关参数等，可替代前面的1、2步 -->
	<!-- 使用PropertyOverrideConfigurer后处理器加载数据源参数 -->
	<context:property-override location="classpath:db.properties"/>
	<!-- 配置c3p0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"/>

    <!-- 约定大于配置 -->
    <!-- 3、配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置Mybatis全局配置文件：mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描entity包（多个包间使用分号;隔开），使用别名 -->
        <property name="typeAliasesPackage" value="com.tosit.genius.entity"/>
        <!-- 扫描sql配置文件：mapper需要的XML文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 4、配置扫描DAO接口包，动态实现DAO接口，并注入到Spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入qlSessionFactory，注意不建议使用name="sqlSessionFactory"，为了防止提前初始化 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描DAO接口包 -->
        <property name="basePackage" value="com.tosit.genius.dao"/>
    </bean>
    <context:component-scan base-package="com.tosit.genius.dao"></context:component-scan>
</beans>
